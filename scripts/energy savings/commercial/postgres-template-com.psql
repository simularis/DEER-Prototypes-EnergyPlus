/*
postgres-template-com.psql
Nicholas Fette, created 2023-01-05, modified 2025-09-29

Automate DEER weighted average processing workflow in PostgreSQL:
Set up support tables, import results data , and run all the post-processing scripts.
Warning: deletes the results data currently in the designated database schema.

Setup steps:
  Copy the template to your measure folder and rename the file,
  e.g. "commercial measures/SWHC012/postgres-com-SWHC012.psql".
  Edit import statements to import each file from data transformation steps.
  For any customizations such as importing and updating results from additional data sources,
  document modifications with a comment.

Usage on command line (substitute your measure folder for SWXX000)
  cd "C:/DEER-Prototypes-EnergyPlus/commercial measures/SWXX000"
  psql -d "postgres" -U "postgres" -f "postgres-com-SWXX000.psql"

Substitute the database name (-d) and user name (-U) based on your installation settings.

If psql is not recognized, you may need to configure the PATH.
After installing one of pgAdmin, dbeaver, or postgresql for example:
  set "path=%PATH%;%LOCALAPPDATA%\Programs\pgAdmin 4\v6\runtime"
  set "path=%PATH%;C:\Program Files\PostgreSQL\15\bin"

Within an open interactive psql session:
  \cd 'C:/DEER-Prototypes-EnergyPlus/commercial measures/SWXX000/'
  \i postgres-com-SWXX000.psql

*/

\set ON_ERROR_STOP on
--\set ECHO all
-- Formatting control codes 
\set H0 '\033[0m'
\set H1 '\n\033[4;1m'
\set H2 '\033[1m--'
\set H3 '\033[3;32m'

-- Set folder paths for this PSQL session.
-- Folder paths may be absolute or relative to this script.
\set DEERROOT '../../'
--\set DEERROOT 'C:/DEER-Prototypes-EnergyPlus/'
-- These commands build folder path strings by concatenating previously defined variables. 
\set SCRIPTS :DEERROOT 'scripts/'
\set SCHEMAFILES :SCRIPTS 'energy savings/commercial/support_and_setup_tables/'
\set ENERGYSAVINGSCOM :SCRIPTS 'energy savings/commercial/'
\set STUDY 'results/'
\set SCHEMANAME 'MC_results_database'
\echo 'Assuming scripts are located in ' :'ENERGYSAVINGSCOM'
\echo 'Assuming measure results are located in subfolders of ' :'STUDY'
\echo 'Assuming schema name ' :'SCHEMANAME'

\echo :H1'[0/7] Creating the schema and set search path.':H0
CREATE SCHEMA IF NOT EXISTS :"SCHEMANAME";
SET search_path TO :"SCHEMANAME";

\echo :H1'[1/7] Loading support tables':H0

-- Note that PSQL commands with a filename as an argument, like \copy and \i,
-- have some limitations and the following can cause errors:
--   Passing a file path variable containing spaces.
--   Attempting to concatenate two strings into a filename within the body of the command.
-- To get around this limitation and to support debugging, we can define the
-- filename or the entire command including its arguments as a variable, echo
-- it for debugging, and then execute it.   

\echo :H2'Support table peakperspec':H0
\set file :SCHEMAFILES 'create_peakperspec.sql' \set command '\\i ' :'file'
\echo :H3:command:H0
:command
truncate "peakperspec";
\set file :ENERGYSAVINGSCOM 'peakperspec.csv'
\set command '\\copy "peakperspec" FROM ' :'file' ' WITH (FORMAT csv, HEADER MATCH)'
\echo :H3:command:H0
:command

\echo :H2'Support table wts_com_bldg':H0
\set file :SCHEMAFILES 'create_wts_com_bldg.sql' \set command '\\i ' :'file' 
\echo :H3:command:H0
:command
truncate "wts_com_bldg";
\set file :ENERGYSAVINGSCOM 'wts_com_bldg.csv'
\set command '\\copy "wts_com_bldg" FROM ' :'file' ' WITH (FORMAT csv, HEADER MATCH)'
\echo :H3:command:H0
:command

\echo :H1'[2/7] Creating placeholder tables for imported data':H0

\set file :SCHEMAFILES 'create_current_msr_mat.sql' \set command '\\i ' :'file'
\echo :H3:command:H0
:command
\set file :SCHEMAFILES 'create_sim_annual.sql' \set command '\\i ' :'file'
\echo :H3:command:H0
:command
\set file :SCHEMAFILES 'create_sim_hourly_wb.sql' \set command '\\i ' :'file'
\echo :H3:command:H0
:command

\echo :H1'[3/7] Importing data files generated by Com.py':H0

\echo :H2'Import current_msr_mat':H0
truncate "current_msr_mat";
\set file :STUDY 'current_msr_mat.csv'
\set command '\\copy "current_msr_mat" FROM ' :'file' ' WITH (FORMAT csv, HEADER MATCH)'
\echo :H3:command:H0
:command

\echo :H2'Import sim_annual':H0
truncate "sim_annual";
\set file :STUDY 'sim_annual.csv'
\set command '\\copy "sim_annual" FROM ' :'file' ' WITH (FORMAT csv, HEADER MATCH)'
\echo :H3:command:H0
:command

\echo :H2'Import sim_hourly_wb':H0
/*
truncate "sim_hourly_wb";
\set file :STUDY 'sim_hourly_wb.csv'
\set command '\\copy "sim_hourly_wb" FROM ' :'file' ' WITH (FORMAT csv, HEADER MATCH)'
\echo :H3:command:H0
:command
*/

\echo :H1'[4/7] Computing peak demand from hourly data':H0

\echo :H2'Run script P1':H0
\set file :ENERGYSAVINGSCOM 'P1-Create-sim_peakper_2023.sql' \i :file

\echo :H1'[5/7] Calculating measure energy impacts':H0

\echo :H2'Run script P2 (merge base case and measure case, normalize)':H0
\set file :ENERGYSAVINGSCOM 'P2-Calc_MsrImpacts_2023.sql' \i :file
\echo :H2'Run script P3 (sector weighted average, step 1 of 2)':H0
\set file :ENERGYSAVINGSCOM 'P3-Bldg_wt_Mult.sql' \i :file
\echo :H2'Run script P4 (sector weighted average, step 2 of 2)':H0
\set file :ENERGYSAVINGSCOM 'P4-SumBldg.sql' \i :file
\echo :H2'Run script P5 (rounding)':H0
\set file :ENERGYSAVINGSCOM 'P5-roundDEER.sql' \i :file

\echo :H1'[6/7] Writing output files':H0
\echo :H2'Write file meas_impacts_2024_com.csv (in the current directory).':H0
\copy "meas_impacts_2024_com" to 'meas_impacts_2024_com.csv' WITH (FORMAT csv, HEADER)

\echo :H1'[7/7] Done':H0
